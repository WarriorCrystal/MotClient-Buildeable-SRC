buildscript {
    repositories {
        jcenter()

        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }


    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'

//        classpath 'javassist:javassist:3.12.1.GA'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'com.github.johnrengelman.shadow'

version = "b2"
group = "ml.manto"

minecraft {
    version = project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion
    coreMod = 'ml.manto.MOT.Mot'
    makeObfSourceJar = false
}

repositories {
    maven {
        name = 'swt-repo'
        url = "http://maven-eclipse.github.io/maven"
    }

    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }

    mavenCentral()
}

dependencies {
    compile group: 'club.minnced', name: 'java-discord-rpc', version: 'v2.0.1'

	
//    compile 'org.reflections:reflections:0.9.12'
//    compile 'javassist:javassist:3.12.1.GA'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

    rename "(.+_at.cfg)", 'META-INF/$1'
}

shadowJar {
    dependencies {
        include(dependency('club.minnced:java-discord-rpc:v2.0.1'))
//        include(dependency('org.reflections:reflections'))
//        include(dependency('javassist:javassist'))
    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
}


reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes (

                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'ml.manto.MOT.Mot',
                'ForceLoadAsMod': 'true',
        )
    }
}

build.dependsOn(shadowJar)